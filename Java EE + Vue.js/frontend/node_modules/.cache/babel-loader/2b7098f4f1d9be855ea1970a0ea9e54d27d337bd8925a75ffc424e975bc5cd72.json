{"ast":null,"code":"import { api } from \"../api.js\";\nexport default {\n  data() {\n    return {\n      form: {\n        name: \"\",\n        email: \"\",\n        password: \"\"\n      },\n      error: \"\",\n      success: \"\"\n    };\n  },\n  methods: {\n    async handleSubmit() {\n      try {\n        if (!this.form.name || !this.form.email || !this.form.password) {\n          this.error = \"All fields are required.\";\n          return;\n        }\n\n        // Clear previous messages\n        this.error = \"\";\n        this.success = \"\";\n\n        // Send data to the API\n        const response = await api.registerUser(this.form);\n        this.success = \"Registration successful!\";\n        console.log(\"Response:\", response.data);\n      } catch (err) {\n        this.error = err.response && err.response.data && err.response.data.message || \"An error occurred during registration.\";\n      }\n    }\n  }\n};","map":{"version":3,"names":["api","data","form","name","email","password","error","success","methods","handleSubmit","response","registerUser","console","log","err","message"],"sources":["/home/kamilla/IdeaProjects/web-lab-4/hello/src/components/RegistrationForm.vue"],"sourcesContent":["<template>\r\n  <div class=\"registration-form\">\r\n    <h2>Registration Form</h2>\r\n    <form @submit.prevent=\"handleSubmit\">\r\n      <!-- Name Field -->\r\n      <div class=\"form-group\">\r\n        <label for=\"name\">Name</label>\r\n        <input \r\n          type=\"text\" \r\n          id=\"name\" \r\n          v-model=\"form.name\" \r\n          placeholder=\"Enter your name\" \r\n          required\r\n        />\r\n      </div>\r\n\r\n      <!-- Email Field -->\r\n      <div class=\"form-group\">\r\n        <label for=\"email\">Email</label>\r\n        <input \r\n          type=\"email\" \r\n          id=\"email\" \r\n          v-model=\"form.email\" \r\n          placeholder=\"Enter your email\" \r\n          required\r\n        />\r\n      </div>\r\n\r\n      <!-- Password Field -->\r\n      <div class=\"form-group\">\r\n        <label for=\"password\">Password</label>\r\n        <input \r\n          type=\"password\" \r\n          id=\"password\" \r\n          v-model=\"form.password\" \r\n          placeholder=\"Enter your password\" \r\n          required\r\n        />\r\n      </div>\r\n\r\n      <!-- Submit Button -->\r\n      <button type=\"submit\">Register</button>\r\n    </form>\r\n\r\n    <!-- Error Message -->\r\n    <div v-if=\"error\" class=\"error-message\">{{ error }}</div>\r\n    <!-- Success Message -->\r\n    <div v-if=\"success\" class=\"success-message\">{{ success }}</div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { api } from \"../api.js\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      form: {\r\n        name: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n      },\r\n      error: \"\",\r\n      success: \"\",\r\n    };\r\n  },\r\n  methods: {\r\n    async handleSubmit() {\r\n      try {\r\n        if (!this.form.name || !this.form.email || !this.form.password) {\r\n          this.error = \"All fields are required.\";\r\n          return;\r\n        }\r\n\r\n        // Clear previous messages\r\n        this.error = \"\";\r\n        this.success = \"\";\r\n\r\n        // Send data to the API\r\n        const response = await api.registerUser(this.form);\r\n        this.success = \"Registration successful!\";\r\n        console.log(\"Response:\", response.data);\r\n      } catch (err) {\r\n        this.error = (err.response && err.response.data && err.response.data.message) \r\n          || \"An error occurred during registration.\";\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.registration-form {\r\n  max-width: 400px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\nh2 {\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 15px;\r\n}\r\n\r\nlabel {\r\n  display: block;\r\n  margin-bottom: 5px;\r\n  font-weight: bold;\r\n}\r\n\r\ninput {\r\n  width: 100%;\r\n  padding: 8px;\r\n  box-sizing: border-box;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n}\r\n\r\nbutton {\r\n  width: 100%;\r\n  padding: 10px;\r\n  background-color: #007BFF;\r\n  color: #fff;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #0056b3;\r\n}\r\n\r\n.error-message {\r\n  color: red;\r\n  margin-top: 10px;\r\n  text-align: center;\r\n}\r\n\r\n.success-message {\r\n  color: green;\r\n  margin-top: 10px;\r\n  text-align: center;\r\n}\r\n</style>\r\n\r\n"],"mappings":"AAoDA,SAASA,GAAE,QAAS,WAAW;AAE/B,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE;QACJC,IAAI,EAAE,EAAE;QACRC,KAAK,EAAE,EAAE;QACTC,QAAQ,EAAE;MACZ,CAAC;MACDC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE;IACX,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,YAAYA,CAAA,EAAG;MACnB,IAAI;QACF,IAAI,CAAC,IAAI,CAACP,IAAI,CAACC,IAAG,IAAK,CAAC,IAAI,CAACD,IAAI,CAACE,KAAI,IAAK,CAAC,IAAI,CAACF,IAAI,CAACG,QAAQ,EAAE;UAC9D,IAAI,CAACC,KAAI,GAAI,0BAA0B;UACvC;QACF;;QAEA;QACA,IAAI,CAACA,KAAI,GAAI,EAAE;QACf,IAAI,CAACC,OAAM,GAAI,EAAE;;QAEjB;QACA,MAAMG,QAAO,GAAI,MAAMV,GAAG,CAACW,YAAY,CAAC,IAAI,CAACT,IAAI,CAAC;QAClD,IAAI,CAACK,OAAM,GAAI,0BAA0B;QACzCK,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEH,QAAQ,CAACT,IAAI,CAAC;MACzC,EAAE,OAAOa,GAAG,EAAE;QACZ,IAAI,CAACR,KAAI,GAAKQ,GAAG,CAACJ,QAAO,IAAKI,GAAG,CAACJ,QAAQ,CAACT,IAAG,IAAKa,GAAG,CAACJ,QAAQ,CAACT,IAAI,CAACc,OAAO,IACvE,wCAAwC;MAC/C;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}