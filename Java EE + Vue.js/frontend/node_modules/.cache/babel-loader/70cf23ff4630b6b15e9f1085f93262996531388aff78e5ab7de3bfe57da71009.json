{"ast":null,"code":"import { api } from '../api';\nimport { handleApiError } from '../utils';\nexport default {\n  name: 'RegistrationForm',\n  data() {\n    return {\n      isRegisterMode: true,\n      user: {\n        email: '',\n        password: '',\n        username: ''\n      },\n      errorMessage: '',\n      currentTime: new Date().toLocaleTimeString()\n    };\n  },\n  methods: {\n    showNotification(message, imageUrl = null) {\n      const notification = document.getElementById('notification');\n      notification.innerHTML = '';\n      if (imageUrl) {\n        const img = document.createElement('img');\n        img.src = imageUrl;\n        img.alt = 'Notification Image';\n        img.style.width = '150px';\n        img.style.height = '150px';\n        img.style.marginRight = '10px';\n        img.style.verticalAlign = 'middle';\n        notification.appendChild(img);\n      }\n      const text = document.createElement('span');\n      text.textContent = message;\n      console.log(message, imageUrl);\n      notification.appendChild(text);\n      notification.style.display = 'flex';\n      notification.style.opacity = 1;\n      setTimeout(() => {\n        notification.style.opacity = 0;\n        setTimeout(() => {\n          notification.style.display = 'none';\n        }, 500);\n      }, 3000);\n    },\n    async submitForm() {\n      try {\n        if (this.isRegisterMode) {\n          await api.registerUser(this.user);\n        }\n        const loginResponse = await api.loginUser({\n          email: this.user.email,\n          password: this.user.password\n        });\n        localStorage.setItem('authToken', loginResponse.token);\n        this.$emit('user-logged-in', loginResponse.data);\n        this.resetForm();\n      } catch (error) {\n        handleApiError(error, this.showNotification);\n      }\n    },\n    resetForm() {\n      this.user.email = '';\n      this.user.password = '';\n      this.user.username = '';\n    },\n    toggleMode() {\n      this.isRegisterMode = !this.isRegisterMode;\n    },\n    updateClock() {\n      this.currentTime = new Date().toLocaleTimeString();\n    }\n  },\n  mounted() {\n    this.clockInterval = setInterval(this.updateClock, 7000);\n  },\n  beforeUnmount() {\n    clearInterval(this.clockInterval);\n  }\n};","map":{"version":3,"names":["api","handleApiError","name","data","isRegisterMode","user","email","password","username","errorMessage","currentTime","Date","toLocaleTimeString","methods","showNotification","message","imageUrl","notification","document","getElementById","innerHTML","img","createElement","src","alt","style","width","height","marginRight","verticalAlign","appendChild","text","textContent","console","log","display","opacity","setTimeout","submitForm","registerUser","loginResponse","loginUser","localStorage","setItem","token","$emit","resetForm","error","toggleMode","updateClock","mounted","clockInterval","setInterval","beforeUnmount","clearInterval"],"sources":["/home/kamilla/IdeaProjects/web-lab-4/hello/src/components/RegistrationForm.vue"],"sourcesContent":["<template>\r\n  <div class=\"container registration-form\">\r\n    <h2 v-if=\"isRegisterMode\">Register</h2>\r\n    <h2 v-else>Login</h2>\r\n    <div class=\"clock\">\r\n      <p>{{ currentTime }}</p>\r\n    </div>\r\n    <form @submit.prevent=\"submitForm\" class=\"form-container\">\r\n      <div>\r\n        <input\r\n            type=\"email\"\r\n            v-model=\"user.email\"\r\n            placeholder=\"Email\"\r\n            required\r\n        />\r\n      </div>\r\n      <div>\r\n        <input\r\n            type=\"password\"\r\n            v-model=\"user.password\"\r\n            placeholder=\"Password\"\r\n            required\r\n        />\r\n      </div>\r\n      <div v-if=\"isRegisterMode\">\r\n        <input\r\n            type=\"text\"\r\n            v-model=\"user.username\"\r\n            placeholder=\"Username\"\r\n            required\r\n        />\r\n      </div>\r\n      <div>\r\n        <button class=\"btn\" type=\"submit\">{{ isRegisterMode ? 'Register' : 'Login' }}</button>\r\n      </div>\r\n    </form>\r\n    <div v-if=\"errorMessage\" class=\"error\">{{ errorMessage }}</div>\r\n    <div>\r\n      <button class=\"btn\" @click=\"toggleMode\">\r\n        {{ isRegisterMode ? 'Already have an account? Login' : \"Don't have an account? Register\" }}\r\n      </button>\r\n    </div>\r\n  </div>\r\n  <div id=\"notification\" class=\"notification\" style=\"display: none;\"></div>\r\n</template>\r\n\r\n<script>\r\nimport { api } from '../api';\r\nimport { handleApiError } from '../utils';\r\n\r\nexport default {\r\n  name: 'RegistrationForm',\r\n  data() {\r\n    return {\r\n      isRegisterMode: true,\r\n      user: {\r\n        email: '',\r\n        password: '',\r\n        username: '',\r\n      },\r\n      errorMessage: '',\r\n      currentTime: new Date().toLocaleTimeString(),\r\n    };\r\n  },\r\n  methods: {\r\n    showNotification(message, imageUrl = null) {\r\n      const notification = document.getElementById('notification');\r\n\r\n      notification.innerHTML = '';\r\n\r\n      if (imageUrl) {\r\n        const img = document.createElement('img');\r\n        img.src = imageUrl;\r\n        img.alt = 'Notification Image';\r\n        img.style.width = '150px';\r\n        img.style.height = '150px';\r\n        img.style.marginRight = '10px';\r\n        img.style.verticalAlign = 'middle';\r\n        notification.appendChild(img);\r\n      }\r\n\r\n      const text = document.createElement('span');\r\n      text.textContent = message;\r\n      console.log(message, imageUrl);\r\n      notification.appendChild(text);\r\n\r\n      notification.style.display = 'flex';\r\n      notification.style.opacity = 1;\r\n\r\n      setTimeout(() => {\r\n        notification.style.opacity = 0;\r\n        setTimeout(() => {\r\n          notification.style.display = 'none';\r\n        }, 500);\r\n      }, 3000);\r\n    },\r\n    async submitForm() {\r\n      try {\r\n        if (this.isRegisterMode) {\r\n          await api.registerUser(this.user);\r\n        }\r\n\r\n        const loginResponse = await api.loginUser({\r\n          email: this.user.email,\r\n          password: this.user.password,\r\n        });\r\n\r\n        localStorage.setItem('authToken', loginResponse.token);\r\n\r\n        this.$emit('user-logged-in', loginResponse.data);\r\n\r\n        this.resetForm();\r\n      } catch (error) {\r\n        handleApiError(error, this.showNotification);\r\n      }\r\n    },\r\n    resetForm() {\r\n      this.user.email = '';\r\n      this.user.password = '';\r\n      this.user.username = '';\r\n    },\r\n    toggleMode() {\r\n      this.isRegisterMode = !this.isRegisterMode;\r\n    },\r\n    updateClock() {\r\n      this.currentTime = new Date().toLocaleTimeString();\r\n    },\r\n  },\r\n  mounted() {\r\n    this.clockInterval = setInterval(this.updateClock, 7000);\r\n  },\r\n  beforeUnmount() {\r\n    clearInterval(this.clockInterval);\r\n  },\r\n};\r\n</script>\r\n\r\n<style src=\"../assets/style/screenSize.css\"></style>\r\n<style scoped>\r\n.registration-form {\r\n  max-width: 400px;\r\n  margin: 0 auto;\r\n}\r\n\r\ninput {\r\n  width: 100%;\r\n  padding: 10px;\r\n  margin: 10px 0;\r\n}\r\n\r\nbutton {\r\n  width: 100%;\r\n  padding: 10px;\r\n  color: white;\r\n  border: none;\r\n  cursor: pointer;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: rgba(255, 192, 203, 0.85);;\r\n}\r\n\r\n.error {\r\n  color: red;\r\n  margin-top: 10px;\r\n}\r\n\r\n.notification {\r\n  position: fixed;\r\n  top: 10px;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  background-color: rgba(255, 192, 203, 0.85);\r\n  color: white;\r\n  padding: 20px;\r\n  border-radius: 5px;\r\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);\r\n  transition: opacity 0.5s ease;\r\n  opacity: 0;\r\n  z-index: 1000;\r\n  display: none;\r\n  align-items: center;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}