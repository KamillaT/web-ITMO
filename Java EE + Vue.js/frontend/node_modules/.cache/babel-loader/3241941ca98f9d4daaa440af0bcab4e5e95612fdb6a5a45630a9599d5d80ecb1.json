{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, toDisplayString as _toDisplayString, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container registration-form\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = {\n  key: 1\n};\nconst _hoisted_4 = {\n  key: 0\n};\nconst _hoisted_5 = {\n  type: \"submit\"\n};\nconst _hoisted_6 = {\n  key: 2,\n  class: \"error\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [$data.isRegisterMode ? (_openBlock(), _createElementBlock(\"h2\", _hoisted_2, \"Register\")) : (_openBlock(), _createElementBlock(\"h2\", _hoisted_3, \"Login\")), _createElementVNode(\"form\", {\n    onSubmit: _cache[3] || (_cache[3] = _withModifiers((...args) => $options.submitForm && $options.submitForm(...args), [\"prevent\"])),\n    class: \"form-container\"\n  }, [_createElementVNode(\"div\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"email\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.user.email = $event),\n    placeholder: \"Email\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.user.email]])]), _createElementVNode(\"div\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.user.password = $event),\n    placeholder: \"Password\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.user.password]])]), $data.isRegisterMode ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.user.username = $event),\n    placeholder: \"Username\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.user.username]])])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", null, [_createElementVNode(\"button\", _hoisted_5, _toDisplayString($data.isRegisterMode ? 'Register' : 'Login'), 1 /* TEXT */)])], 32 /* NEED_HYDRATION */), $data.errorMessage ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, _toDisplayString($data.errorMessage), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", null, [_createElementVNode(\"button\", {\n    onClick: _cache[4] || (_cache[4] = (...args) => $options.toggleMode && $options.toggleMode(...args))\n  }, _toDisplayString($data.isRegisterMode ? 'Already have an account? Login' : \"Don't have an account? Register\"), 1 /* TEXT */)])]);\n}","map":{"version":3,"names":["class","key","type","_createElementBlock","_hoisted_1","$data","isRegisterMode","_hoisted_2","_hoisted_3","_createElementVNode","onSubmit","_cache","_withModifiers","args","$options","submitForm","$event","user","email","placeholder","required","password","_hoisted_4","username","_createCommentVNode","_hoisted_5","_toDisplayString","errorMessage","_hoisted_6","onClick","toggleMode"],"sources":["/home/kamilla/IdeaProjects/web-lab-4/hello/src/components/RegistrationForm.vue"],"sourcesContent":["<template>\r\n  <div class=\"container registration-form\">\r\n    <h2 v-if=\"isRegisterMode\">Register</h2>\r\n    <h2 v-else>Login</h2>\r\n    <form @submit.prevent=\"submitForm\" class=\"form-container\">\r\n      <div>\r\n        <input\r\n            type=\"email\"\r\n            v-model=\"user.email\"\r\n            placeholder=\"Email\"\r\n            required\r\n        />\r\n      </div>\r\n      <div>\r\n        <input\r\n            type=\"password\"\r\n            v-model=\"user.password\"\r\n            placeholder=\"Password\"\r\n            required\r\n        />\r\n      </div>\r\n      <div v-if=\"isRegisterMode\">\r\n        <input\r\n            type=\"text\"\r\n            v-model=\"user.username\"\r\n            placeholder=\"Username\"\r\n            required\r\n        />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">{{ isRegisterMode ? 'Register' : 'Login' }}</button>\r\n      </div>\r\n    </form>\r\n    <div v-if=\"errorMessage\" class=\"error\">{{ errorMessage }}</div>\r\n    <div>\r\n      <button @click=\"toggleMode\">\r\n        {{ isRegisterMode ? 'Already have an account? Login' : \"Don't have an account? Register\" }}\r\n      </button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { api } from '../api';\r\nimport { handleApiError } from '../utils';\r\n\r\nexport default {\r\n  name: 'RegistrationForm',\r\n  data() {\r\n    return {\r\n      isRegisterMode: true,\r\n      user: {\r\n        email: '',\r\n        password: '',\r\n        username: '',\r\n      },\r\n      errorMessage: '',\r\n    };\r\n  },\r\n  methods: {\r\n    async submitForm() {\r\n      try {\r\n        if (this.isRegisterMode) {\r\n          await api.registerUser(this.user);\r\n        }\r\n\r\n        const loginResponse = await api.loginUser({\r\n          email: this.user.email,\r\n          password: this.user.password,\r\n        });\r\n\r\n        localStorage.setItem('authToken', loginResponse.token);\r\n\r\n        this.$emit('user-logged-in', loginResponse.data);\r\n\r\n        this.resetForm();\r\n      } catch (error) {\r\n        handleApiError(error, this.showNotification);\r\n      }\r\n    },\r\n    resetForm() {\r\n      this.user.email = '';\r\n      this.user.password = '';\r\n      this.user.username = '';\r\n    },\r\n    toggleMode() {\r\n      this.isRegisterMode = !this.isRegisterMode;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style src=\"../assets/style/screenSize.css\"></style>\r\n<style scoped>\r\n.registration-form {\r\n  max-width: 400px;\r\n  margin: 0 auto;\r\n}\r\n\r\ninput {\r\n  width: 100%;\r\n  padding: 10px;\r\n  margin: 10px 0;\r\n}\r\n\r\nbutton {\r\n  width: 100%;\r\n  padding: 10px;\r\n  background-color: #28a745;\r\n  color: white;\r\n  border: none;\r\n  cursor: pointer;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #218838;\r\n}\r\n\r\n.error {\r\n  color: red;\r\n  margin-top: 10px;\r\n}\r\n</style>\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAA6B;;EAD1CC,GAAA;AAAA;;EAAAA,GAAA;AAAA;;EAAAA,GAAA;AAAA;;EA8BgBC,IAAI,EAAC;AAAQ;;EA9B7BD,GAAA;EAiC6BD,KAAK,EAAC;;;uBAhCjCG,mBAAA,CAsCM,OAtCNC,UAsCM,GArCMC,KAAA,CAAAC,cAAc,I,cAAxBH,mBAAA,CAAuC,MAF3CI,UAAA,EAE8B,UAAQ,M,cAClCJ,mBAAA,CAAqB,MAHzBK,UAAA,EAGe,OAAK,IAChBC,mBAAA,CA4BO;IA5BAC,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAJjBC,cAAA,KAAAC,IAAA,KAI2BC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;IAAEb,KAAK,EAAC;MACvCS,mBAAA,CAOM,c,gBANJA,mBAAA,CAKE;IAJEP,IAAI,EAAC,OAAO;IAPxB,uBAAAS,MAAA,QAAAA,MAAA,MAAAK,MAAA,IAQqBX,KAAA,CAAAY,IAAI,CAACC,KAAK,GAAAF,MAAA;IACnBG,WAAW,EAAC,OAAO;IACnBC,QAAQ,EAAR;iDAFSf,KAAA,CAAAY,IAAI,CAACC,KAAK,E,KAKzBT,mBAAA,CAOM,c,gBANJA,mBAAA,CAKE;IAJEP,IAAI,EAAC,UAAU;IAf3B,uBAAAS,MAAA,QAAAA,MAAA,MAAAK,MAAA,IAgBqBX,KAAA,CAAAY,IAAI,CAACI,QAAQ,GAAAL,MAAA;IACtBG,WAAW,EAAC,UAAU;IACtBC,QAAQ,EAAR;iDAFSf,KAAA,CAAAY,IAAI,CAACI,QAAQ,E,KAKjBhB,KAAA,CAAAC,cAAc,I,cAAzBH,mBAAA,CAOM,OA5BZmB,UAAA,G,gBAsBQb,mBAAA,CAKE;IAJEP,IAAI,EAAC,MAAM;IAvBvB,uBAAAS,MAAA,QAAAA,MAAA,MAAAK,MAAA,IAwBqBX,KAAA,CAAAY,IAAI,CAACM,QAAQ,GAAAP,MAAA;IACtBG,WAAW,EAAC,UAAU;IACtBC,QAAQ,EAAR;iDAFSf,KAAA,CAAAY,IAAI,CAACM,QAAQ,E,OAxBlCC,mBAAA,gBA6BMf,mBAAA,CAEM,cADJA,mBAAA,CAA0E,UAA1EgB,UAA0E,EAAAC,gBAAA,CAAjDrB,KAAA,CAAAC,cAAc,wC,8BAGhCD,KAAA,CAAAsB,YAAY,I,cAAvBxB,mBAAA,CAA+D,OAA/DyB,UAA+D,EAAAF,gBAAA,CAArBrB,KAAA,CAAAsB,YAAY,oBAjC1DH,mBAAA,gBAkCIf,mBAAA,CAIM,cAHJA,mBAAA,CAES;IAFAoB,OAAK,EAAAlB,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAEC,QAAA,CAAAgB,UAAA,IAAAhB,QAAA,CAAAgB,UAAA,IAAAjB,IAAA,CAAU;sBACrBR,KAAA,CAAAC,cAAc,wF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}