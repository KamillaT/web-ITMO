{"ast":null,"code":"const API_URL = 'http://localhost:8080/backend/api/users/';\nexport const api = {\n  registerUser(userData) {\n    return fetch(`${API_URL}register/`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      body: JSON.stringify(userData)\n    }).then(response => {\n      if (!response.ok) {\n        return response.json().then(errorData => {\n          throw new Error(errorData.message || 'Failed to register user.');\n        });\n      }\n      return response.json();\n    });\n  },\n  loginUser(userData) {\n    return fetch(`${API_URL}login/`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      body: JSON.stringify(userData)\n    }).then(response => {\n      if (!response.ok) {\n        return response.json().then(errorData => {\n          throw new Error(errorData.message || 'Failed to log in.');\n        });\n      }\n      return response.json();\n    });\n  }\n};","map":{"version":3,"names":["API_URL","api","registerUser","userData","fetch","method","headers","body","JSON","stringify","then","response","ok","json","errorData","Error","message","loginUser"],"sources":["/home/kamilla/IdeaProjects/web-lab-4/hello/src/api.js"],"sourcesContent":["const API_URL = 'http://localhost:8080/backend/api/users/';\n\nexport const api = {\n  registerUser(userData) {\n    return fetch(`${API_URL}register/`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n      },\n      body: JSON.stringify(userData),\n    })\n      .then((response) => {\n        if (!response.ok) {\n          return response.json().then((errorData) => {\n            throw new Error(errorData.message || 'Failed to register user.');\n          });\n        }\n        return response.json();\n      });\n  },\n  loginUser(userData) {\n    return fetch(`${API_URL}login/`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n      },\n      body: JSON.stringify(userData),\n    })\n      .then((response) => {\n        if (!response.ok) {\n          return response.json().then((errorData) => {\n            throw new Error(errorData.message || 'Failed to log in.');\n          });\n        }\n        return response.json();\n      });\n  },\n};\n\n"],"mappings":"AAAA,MAAMA,OAAO,GAAG,0CAA0C;AAE1D,OAAO,MAAMC,GAAG,GAAG;EACjBC,YAAYA,CAACC,QAAQ,EAAE;IACrB,OAAOC,KAAK,CAAC,GAAGJ,OAAO,WAAW,EAAE;MAClCK,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClC,QAAQ,EAAE;MACZ,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,QAAQ;IAC/B,CAAC,CAAC,CACCO,IAAI,CAAEC,QAAQ,IAAK;MAClB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QAChB,OAAOD,QAAQ,CAACE,IAAI,CAAC,CAAC,CAACH,IAAI,CAAEI,SAAS,IAAK;UACzC,MAAM,IAAIC,KAAK,CAACD,SAAS,CAACE,OAAO,IAAI,0BAA0B,CAAC;QAClE,CAAC,CAAC;MACJ;MACA,OAAOL,QAAQ,CAACE,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC;EACN,CAAC;EACDI,SAASA,CAACd,QAAQ,EAAE;IAClB,OAAOC,KAAK,CAAC,GAAGJ,OAAO,QAAQ,EAAE;MAC/BK,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClC,QAAQ,EAAE;MACZ,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,QAAQ;IAC/B,CAAC,CAAC,CACCO,IAAI,CAAEC,QAAQ,IAAK;MAClB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QAChB,OAAOD,QAAQ,CAACE,IAAI,CAAC,CAAC,CAACH,IAAI,CAAEI,SAAS,IAAK;UACzC,MAAM,IAAIC,KAAK,CAACD,SAAS,CAACE,OAAO,IAAI,mBAAmB,CAAC;QAC3D,CAAC,CAAC;MACJ;MACA,OAAOL,QAAQ,CAACE,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC;EACN;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}