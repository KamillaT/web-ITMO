{"ast":null,"code":"const API_URL = 'http://localhost:8080/backend/api/';\nexport const api = {\n  registerUser(userData) {\n    return fetch(`${API_URL}users/register`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      body: JSON.stringify(userData)\n    }).then(response => {\n      if (!response.ok) {\n        return response.json().then(errorData => {\n          throw new Error(errorData.message || 'Failed to register user.');\n        });\n      }\n      return response.json();\n    });\n  },\n  loginUser(userData) {\n    return fetch(`${API_URL}users/login`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      body: JSON.stringify(userData)\n    }).then(response => {\n      if (!response.ok) {\n        return response.json().then(errorData => {\n          throw new Error(errorData.message || 'Failed to log in.');\n        });\n      }\n      return response.json();\n    });\n  },\n  getPersonalPage() {\n    const authToken = localStorage.getItem('authToken');\n    const userId = localStorage.getItem('userId');\n    return fetch(`${API_URL}users/${userId}`, {\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer ${authToken}`\n      }\n    }).then(response => {\n      if (!response.ok) {\n        return response.json().then(errorData => {\n          throw new Error(errorData.message || 'Failed to fetch personal page.');\n        });\n      }\n      return response.json();\n    });\n  },\n  submitPoint(authToken, pointData) {\n    return fetch(`${API_URL}points/checkpoint`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${authToken}`\n      },\n      body: JSON.stringify(pointData)\n    }).then(response => {\n      if (!response.ok) {\n        return response.json().then(errorData => {\n          throw new Error(errorData.message || 'Failed to submit point.');\n        });\n      }\n      return response.json();\n    });\n  },\n  getPoints(authToken, userId) {\n    return fetch(`${API_URL}points/${userId}`, {\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer ${authToken}`\n      }\n    }).then(response => {\n      if (!response.ok) {\n        return response.json().then(errorData => {\n          throw new Error(errorData.message || 'Failed to fetch points.');\n        });\n      }\n      return response.json();\n    });\n  }\n};","map":{"version":3,"names":["API_URL","api","registerUser","userData","fetch","method","headers","body","JSON","stringify","then","response","ok","json","errorData","Error","message","loginUser","getPersonalPage","authToken","localStorage","getItem","userId","Authorization","submitPoint","pointData","getPoints"],"sources":["/home/kamilla/IdeaProjects/web-lab-4/hello/src/api.js"],"sourcesContent":["const API_URL = 'http://localhost:8080/backend/api/';\n\nexport const api = {\n  registerUser(userData) {\n    return fetch(`${API_URL}users/register`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n      },\n      body: JSON.stringify(userData),\n    })\n      .then((response) => {\n        if (!response.ok) {\n          return response.json().then((errorData) => {\n            throw new Error(errorData.message || 'Failed to register user.');\n          });\n        }\n        return response.json();\n      });\n  },\n  loginUser(userData) {\n    return fetch(`${API_URL}users/login`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n      },\n      body: JSON.stringify(userData),\n    })\n      .then((response) => {\n        if (!response.ok) {\n          return response.json().then((errorData) => {\n            throw new Error(errorData.message || 'Failed to log in.');\n          });\n        }\n        return response.json();\n      });\n  },\n  getPersonalPage() {\n    const authToken = localStorage.getItem('authToken');\n    const userId = localStorage.getItem('userId');\n    return fetch(`${API_URL}users/${userId}`, {\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer ${authToken}`,\n      },\n    })\n      .then((response) => {\n        if (!response.ok) {\n          return response.json().then((errorData) => {\n            throw new Error(errorData.message || 'Failed to fetch personal page.');\n          });\n        }\n        return response.json();\n      });\n  },\n  submitPoint(authToken, pointData) {\n    return fetch(`${API_URL}points/checkpoint`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${authToken}`,\n      },\n      body: JSON.stringify(pointData),\n    })\n      .then((response) => {\n        if (!response.ok) {\n          return response.json().then((errorData) => {\n            throw new Error(errorData.message || 'Failed to submit point.');\n          });\n        }\n        return response.json();\n      });\n  },\n  getPoints(authToken, userId) {\n    return fetch(`${API_URL}points/${userId}`, {\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer ${authToken}`,\n      },\n    })\n      .then((response) => {\n        if (!response.ok) {\n          return response.json().then((errorData) => {\n            throw new Error(errorData.message || 'Failed to fetch points.');\n          });\n        }\n        return response.json();\n      });\n  },\n};\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}