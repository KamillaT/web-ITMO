{"ast":null,"code":"import RegistrationForm from './components/RegistrationForm.vue';\nimport PersonalPage from './views/PersonalPage.vue';\nimport { api } from './api';\nexport default {\n  name: 'App',\n  components: {\n    RegistrationForm,\n    PersonalPage\n  },\n  data() {\n    return {\n      isLoggedIn: false,\n      userEmail: null\n    };\n  },\n  async created() {\n    const authToken = localStorage.getItem('authToken');\n    if (authToken) {\n      try {\n        const userData = await api.getPersonalPage(); // Validates the token\n        this.isLoggedIn = true;\n        this.userEmail = userData.email;\n      } catch (error) {\n        console.error('Automatic login failed:', error);\n        localStorage.removeItem('authToken'); // Clear invalid token\n      }\n    }\n  },\n  methods: {\n    onUserLoggedIn(userData) {\n      this.isLoggedIn = true;\n      this.userEmail = userData.email;\n    },\n    onUserLoggedOut() {\n      this.isLoggedIn = false;\n      this.userEmail = null;\n    }\n  }\n};","map":{"version":3,"names":["RegistrationForm","PersonalPage","api","name","components","data","isLoggedIn","userEmail","created","authToken","localStorage","getItem","userData","getPersonalPage","email","error","console","removeItem","methods","onUserLoggedIn","onUserLoggedOut"],"sources":["/home/kamilla/IdeaProjects/web-lab-4/hello/src/App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <nav>\n        <div>\n            <h1>Welcome to the User App</h1>\n        </div>\n        <div>\n            <h1>卡米拉 P3223 409660</h1>\n        </div>\n    </nav>\n    <RegistrationForm v-if=\"!isLoggedIn\" @user-logged-in=\"onUserLoggedIn\" />\n    <PersonalPage\n        v-else\n        :email=\"userEmail\"\n        @user-logged-out=\"onUserLoggedOut\"\n    />\n  </div>\n</template>\n\n<script>\nimport RegistrationForm from './components/RegistrationForm.vue';\nimport PersonalPage from './views/PersonalPage.vue';\nimport { api } from './api';\n\nexport default {\n  name: 'App',\n  components: {\n    RegistrationForm,\n    PersonalPage,\n  },\n  data() {\n    return {\n      isLoggedIn: false,\n      userEmail: null,\n    };\n  },\n  async created() {\n    const authToken = localStorage.getItem('authToken');\n    if (authToken) {\n      try {\n        const userData = await api.getPersonalPage(); // Validates the token\n        this.isLoggedIn = true;\n        this.userEmail = userData.email;\n      } catch (error) {\n        console.error('Automatic login failed:', error);\n        localStorage.removeItem('authToken'); // Clear invalid token\n      }\n    }\n  },\n  methods: {\n    onUserLoggedIn(userData) {\n      this.isLoggedIn = true;\n      this.userEmail = userData.email;\n    },\n    onUserLoggedOut() {\n      this.isLoggedIn = false;\n      this.userEmail = null;\n    },\n  },\n};\n</script>\n\n\n<style src=\"./assets/style/screenSize.css\"></style>\n<style>\nbody {\n  font-family: Arial, sans-serif;\n  margin: 20px;\n}\n\nh1 {\n  color: #333;\n}\n</style>\n"],"mappings":"AAoBA,OAAOA,gBAAe,MAAO,mCAAmC;AAChE,OAAOC,YAAW,MAAO,0BAA0B;AACnD,SAASC,GAAE,QAAS,OAAO;AAE3B,eAAe;EACbC,IAAI,EAAE,KAAK;EACXC,UAAU,EAAE;IACVJ,gBAAgB;IAChBC;EACF,CAAC;EACDI,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,UAAU,EAAE,KAAK;MACjBC,SAAS,EAAE;IACb,CAAC;EACH,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd,MAAMC,SAAQ,GAAIC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IACnD,IAAIF,SAAS,EAAE;MACb,IAAI;QACF,MAAMG,QAAO,GAAI,MAAMV,GAAG,CAACW,eAAe,CAAC,CAAC,EAAE;QAC9C,IAAI,CAACP,UAAS,GAAI,IAAI;QACtB,IAAI,CAACC,SAAQ,GAAIK,QAAQ,CAACE,KAAK;MACjC,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;QAC/CL,YAAY,CAACO,UAAU,CAAC,WAAW,CAAC,EAAE;MACxC;IACF;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,cAAcA,CAACP,QAAQ,EAAE;MACvB,IAAI,CAACN,UAAS,GAAI,IAAI;MACtB,IAAI,CAACC,SAAQ,GAAIK,QAAQ,CAACE,KAAK;IACjC,CAAC;IACDM,eAAeA,CAAA,EAAG;MAChB,IAAI,CAACd,UAAS,GAAI,KAAK;MACvB,IAAI,CAACC,SAAQ,GAAI,IAAI;IACvB;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}