{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container registration-form\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = {\n  key: 1\n};\nconst _hoisted_4 = {\n  class: \"clock\"\n};\nconst _hoisted_5 = {\n  key: 0\n};\nconst _hoisted_6 = {\n  class: \"btn\",\n  type: \"submit\"\n};\nconst _hoisted_7 = {\n  key: 2,\n  class: \"error\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [$data.isRegisterMode ? (_openBlock(), _createElementBlock(\"h2\", _hoisted_2, \"Register\")) : (_openBlock(), _createElementBlock(\"h2\", _hoisted_3, \"Login\")), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"p\", null, _toDisplayString($data.currentTime), 1 /* TEXT */)]), _createElementVNode(\"form\", {\n    onSubmit: _cache[3] || (_cache[3] = _withModifiers((...args) => $options.submitForm && $options.submitForm(...args), [\"prevent\"])),\n    class: \"form-container\"\n  }, [_createElementVNode(\"div\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"email\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.user.email = $event),\n    placeholder: \"Email\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.user.email]])]), _createElementVNode(\"div\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.user.password = $event),\n    placeholder: \"Password\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.user.password]])]), $data.isRegisterMode ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.user.username = $event),\n    placeholder: \"Username\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.user.username]])])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", null, [_createElementVNode(\"button\", _hoisted_6, _toDisplayString($data.isRegisterMode ? 'Register' : 'Login'), 1 /* TEXT */)])], 32 /* NEED_HYDRATION */), $data.errorMessage ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, _toDisplayString($data.errorMessage), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", null, [_createElementVNode(\"button\", {\n    class: \"btn\",\n    onClick: _cache[4] || (_cache[4] = (...args) => $options.toggleMode && $options.toggleMode(...args))\n  }, _toDisplayString($data.isRegisterMode ? 'Already have an account? Login' : \"Don't have an account? Register\"), 1 /* TEXT */)])]), _cache[5] || (_cache[5] = _createElementVNode(\"div\", {\n    id: \"notification\",\n    class: \"notification\",\n    style: {\n      \"display\": \"none\"\n    }\n  }, null, -1 /* HOISTED */))], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","key","type","_createElementBlock","_Fragment","_createElementVNode","_hoisted_1","$data","isRegisterMode","_hoisted_2","_hoisted_3","_hoisted_4","_toDisplayString","currentTime","onSubmit","_cache","_withModifiers","args","$options","submitForm","$event","user","email","placeholder","required","password","_hoisted_5","username","_createCommentVNode","_hoisted_6","errorMessage","_hoisted_7","onClick","toggleMode","id","style"],"sources":["/home/kamilla/IdeaProjects/web-lab-4/hello/src/components/RegistrationForm.vue"],"sourcesContent":["<template>\r\n  <div class=\"container registration-form\">\r\n    <h2 v-if=\"isRegisterMode\">Register</h2>\r\n    <h2 v-else>Login</h2>\r\n    <div class=\"clock\">\r\n      <p>{{ currentTime }}</p>\r\n    </div>\r\n    <form @submit.prevent=\"submitForm\" class=\"form-container\">\r\n      <div>\r\n        <input\r\n            type=\"email\"\r\n            v-model=\"user.email\"\r\n            placeholder=\"Email\"\r\n            required\r\n        />\r\n      </div>\r\n      <div>\r\n        <input\r\n            type=\"password\"\r\n            v-model=\"user.password\"\r\n            placeholder=\"Password\"\r\n            required\r\n        />\r\n      </div>\r\n      <div v-if=\"isRegisterMode\">\r\n        <input\r\n            type=\"text\"\r\n            v-model=\"user.username\"\r\n            placeholder=\"Username\"\r\n            required\r\n        />\r\n      </div>\r\n      <div>\r\n        <button class=\"btn\" type=\"submit\">{{ isRegisterMode ? 'Register' : 'Login' }}</button>\r\n      </div>\r\n    </form>\r\n    <div v-if=\"errorMessage\" class=\"error\">{{ errorMessage }}</div>\r\n    <div>\r\n      <button class=\"btn\" @click=\"toggleMode\">\r\n        {{ isRegisterMode ? 'Already have an account? Login' : \"Don't have an account? Register\" }}\r\n      </button>\r\n    </div>\r\n  </div>\r\n  <div id=\"notification\" class=\"notification\" style=\"display: none;\"></div>\r\n</template>\r\n\r\n<script>\r\nimport { api } from '../api';\r\nimport { handleApiError } from '../utils';\r\n\r\nexport default {\r\n  name: 'RegistrationForm',\r\n  data() {\r\n    return {\r\n      isRegisterMode: true,\r\n      user: {\r\n        email: '',\r\n        password: '',\r\n        username: '',\r\n      },\r\n      errorMessage: '',\r\n      currentTime: new Date().toLocaleTimeString(),\r\n    };\r\n  },\r\n  methods: {\r\n    showNotification(message, imageUrl = null) {\r\n      const notification = document.getElementById('notification');\r\n\r\n      notification.innerHTML = '';\r\n\r\n      if (imageUrl) {\r\n        const img = document.createElement('img');\r\n        img.src = imageUrl;\r\n        img.alt = 'Notification Image';\r\n        img.style.width = '150px';\r\n        img.style.height = '150px';\r\n        img.style.marginRight = '10px';\r\n        img.style.verticalAlign = 'middle';\r\n        notification.appendChild(img);\r\n      }\r\n\r\n      const text = document.createElement('span');\r\n      text.textContent = message;\r\n      console.log(message, imageUrl);\r\n      notification.appendChild(text);\r\n\r\n      notification.style.display = 'flex';\r\n      notification.style.opacity = 1;\r\n\r\n      setTimeout(() => {\r\n        notification.style.opacity = 0;\r\n        setTimeout(() => {\r\n          notification.style.display = 'none';\r\n        }, 500);\r\n      }, 3000);\r\n    },\r\n    async submitForm() {\r\n      try {\r\n        if (this.isRegisterMode) {\r\n          await api.registerUser(this.user);\r\n        }\r\n\r\n        const loginResponse = await api.loginUser({\r\n          email: this.user.email,\r\n          password: this.user.password,\r\n        });\r\n\r\n        localStorage.setItem('authToken', loginResponse.token);\r\n\r\n        this.$emit('user-logged-in', loginResponse.data);\r\n\r\n        this.resetForm();\r\n      } catch (error) {\r\n        handleApiError(error, this.showNotification);\r\n      }\r\n    },\r\n    resetForm() {\r\n      this.user.email = '';\r\n      this.user.password = '';\r\n      this.user.username = '';\r\n    },\r\n    toggleMode() {\r\n      this.isRegisterMode = !this.isRegisterMode;\r\n    },\r\n    updateClock() {\r\n      this.currentTime = new Date().toLocaleTimeString();\r\n    },\r\n  },\r\n  mounted() {\r\n    this.clockInterval = setInterval(this.updateClock, 7000);\r\n  },\r\n  beforeUnmount() {\r\n    clearInterval(this.clockInterval);\r\n  },\r\n};\r\n</script>\r\n\r\n<style src=\"../assets/style/screenSize.css\"></style>\r\n<style scoped>\r\n.registration-form {\r\n  max-width: 400px;\r\n  margin: 0 auto;\r\n}\r\n\r\ninput {\r\n  width: 100%;\r\n  padding: 10px;\r\n  margin: 10px 0;\r\n}\r\n\r\nbutton {\r\n  width: 100%;\r\n  padding: 10px;\r\n  color: white;\r\n  border: none;\r\n  cursor: pointer;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: rgba(255, 192, 203, 0.85);;\r\n}\r\n\r\n.error {\r\n  color: red;\r\n  margin-top: 10px;\r\n}\r\n</style>\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAA6B;;EAD1CC,GAAA;AAAA;;EAAAA,GAAA;AAAA;;EAISD,KAAK,EAAC;AAAO;;EAJtBC,GAAA;AAAA;;EAiCgBD,KAAK,EAAC,KAAK;EAACE,IAAI,EAAC;;;EAjCjCD,GAAA;EAoC6BD,KAAK,EAAC;;;uBApCnCG,mBAAA,CAAAC,SAAA,SACEC,mBAAA,CAyCM,OAzCNC,UAyCM,GAxCMC,KAAA,CAAAC,cAAc,I,cAAxBL,mBAAA,CAAuC,MAF3CM,UAAA,EAE8B,UAAQ,M,cAClCN,mBAAA,CAAqB,MAHzBO,UAAA,EAGe,OAAK,IAChBL,mBAAA,CAEM,OAFNM,UAEM,GADJN,mBAAA,CAAwB,WAAAO,gBAAA,CAAlBL,KAAA,CAAAM,WAAW,iB,GAEnBR,mBAAA,CA4BO;IA5BAS,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAPjBC,cAAA,KAAAC,IAAA,KAO2BC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;IAAEjB,KAAK,EAAC;MACvCK,mBAAA,CAOM,c,gBANJA,mBAAA,CAKE;IAJEH,IAAI,EAAC,OAAO;IAVxB,uBAAAa,MAAA,QAAAA,MAAA,MAAAK,MAAA,IAWqBb,KAAA,CAAAc,IAAI,CAACC,KAAK,GAAAF,MAAA;IACnBG,WAAW,EAAC,OAAO;IACnBC,QAAQ,EAAR;iDAFSjB,KAAA,CAAAc,IAAI,CAACC,KAAK,E,KAKzBjB,mBAAA,CAOM,c,gBANJA,mBAAA,CAKE;IAJEH,IAAI,EAAC,UAAU;IAlB3B,uBAAAa,MAAA,QAAAA,MAAA,MAAAK,MAAA,IAmBqBb,KAAA,CAAAc,IAAI,CAACI,QAAQ,GAAAL,MAAA;IACtBG,WAAW,EAAC,UAAU;IACtBC,QAAQ,EAAR;iDAFSjB,KAAA,CAAAc,IAAI,CAACI,QAAQ,E,KAKjBlB,KAAA,CAAAC,cAAc,I,cAAzBL,mBAAA,CAOM,OA/BZuB,UAAA,G,gBAyBQrB,mBAAA,CAKE;IAJEH,IAAI,EAAC,MAAM;IA1BvB,uBAAAa,MAAA,QAAAA,MAAA,MAAAK,MAAA,IA2BqBb,KAAA,CAAAc,IAAI,CAACM,QAAQ,GAAAP,MAAA;IACtBG,WAAW,EAAC,UAAU;IACtBC,QAAQ,EAAR;iDAFSjB,KAAA,CAAAc,IAAI,CAACM,QAAQ,E,OA3BlCC,mBAAA,gBAgCMvB,mBAAA,CAEM,cADJA,mBAAA,CAAsF,UAAtFwB,UAAsF,EAAAjB,gBAAA,CAAjDL,KAAA,CAAAC,cAAc,wC,8BAG5CD,KAAA,CAAAuB,YAAY,I,cAAvB3B,mBAAA,CAA+D,OAA/D4B,UAA+D,EAAAnB,gBAAA,CAArBL,KAAA,CAAAuB,YAAY,oBApC1DF,mBAAA,gBAqCIvB,mBAAA,CAIM,cAHJA,mBAAA,CAES;IAFDL,KAAK,EAAC,KAAK;IAAEgC,OAAK,EAAAjB,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAEC,QAAA,CAAAe,UAAA,IAAAf,QAAA,CAAAe,UAAA,IAAAhB,IAAA,CAAU;sBACjCV,KAAA,CAAAC,cAAc,wF,+BAIvBH,mBAAA,CAAyE;IAApE6B,EAAE,EAAC,cAAc;IAAClC,KAAK,EAAC,cAAc;IAACmC,KAAsB,EAAtB;MAAA;IAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}